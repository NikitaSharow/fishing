<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        licAAAAASUVORK5CYII=
</value>
  </data>
</root>