<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AGza9a73z17lL3/t4pYnAAAAAElFTkSuQmCC
</value>
  </data>
</root>